
Detectar_Linea.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000016e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000011a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000016e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001a0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  000001e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007e6  00000000  00000000  00000228  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006bd  00000000  00000000  00000a0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000330  00000000  00000000  000010cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000058  00000000  00000000  000013fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000474  00000000  00000000  00001454  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000042  00000000  00000000  000018c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  0000190a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 8b 00 	jmp	0x116	; 0x116 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
  80:	87 b1       	in	r24, 0x07	; 7
  82:	83 7f       	andi	r24, 0xF3	; 243
  84:	87 b9       	out	0x07, r24	; 7
  86:	84 b1       	in	r24, 0x04	; 4
  88:	8c 60       	ori	r24, 0x0C	; 12
  8a:	84 b9       	out	0x04, r24	; 4
  8c:	84 e0       	ldi	r24, 0x04	; 4
  8e:	0e 94 79 00 	call	0xf2	; 0xf2 <DeteccionLineaDER>
  92:	89 2b       	or	r24, r25
  94:	41 f0       	breq	.+16     	; 0xa6 <main+0x26>
  96:	88 e0       	ldi	r24, 0x08	; 8
  98:	0e 94 82 00 	call	0x104	; 0x104 <DeteccionLineaIZQ>
  9c:	89 2b       	or	r24, r25
  9e:	19 f0       	breq	.+6      	; 0xa6 <main+0x26>
  a0:	8c e0       	ldi	r24, 0x0C	; 12
  a2:	85 b9       	out	0x05, r24	; 5
  a4:	f3 cf       	rjmp	.-26     	; 0x8c <main+0xc>
  a6:	84 e0       	ldi	r24, 0x04	; 4
  a8:	0e 94 79 00 	call	0xf2	; 0xf2 <DeteccionLineaDER>
  ac:	89 2b       	or	r24, r25
  ae:	61 f0       	breq	.+24     	; 0xc8 <main+0x48>
  b0:	88 e0       	ldi	r24, 0x08	; 8
  b2:	0e 94 82 00 	call	0x104	; 0x104 <DeteccionLineaIZQ>
  b6:	89 2b       	or	r24, r25
  b8:	39 f4       	brne	.+14     	; 0xc8 <main+0x48>
  ba:	85 b1       	in	r24, 0x05	; 5
  bc:	84 60       	ori	r24, 0x04	; 4
  be:	85 b9       	out	0x05, r24	; 5
  c0:	85 b1       	in	r24, 0x05	; 5
  c2:	87 7f       	andi	r24, 0xF7	; 247
  c4:	85 b9       	out	0x05, r24	; 5
  c6:	e2 cf       	rjmp	.-60     	; 0x8c <main+0xc>
  c8:	84 e0       	ldi	r24, 0x04	; 4
  ca:	0e 94 79 00 	call	0xf2	; 0xf2 <DeteccionLineaDER>
  ce:	89 2b       	or	r24, r25
  d0:	61 f4       	brne	.+24     	; 0xea <main+0x6a>
  d2:	88 e0       	ldi	r24, 0x08	; 8
  d4:	0e 94 82 00 	call	0x104	; 0x104 <DeteccionLineaIZQ>
  d8:	89 2b       	or	r24, r25
  da:	39 f0       	breq	.+14     	; 0xea <main+0x6a>
  dc:	85 b1       	in	r24, 0x05	; 5
  de:	8b 7f       	andi	r24, 0xFB	; 251
  e0:	85 b9       	out	0x05, r24	; 5
  e2:	85 b1       	in	r24, 0x05	; 5
  e4:	88 60       	ori	r24, 0x08	; 8
  e6:	85 b9       	out	0x05, r24	; 5
  e8:	d1 cf       	rjmp	.-94     	; 0x8c <main+0xc>
  ea:	85 b1       	in	r24, 0x05	; 5
  ec:	83 7f       	andi	r24, 0xF3	; 243
  ee:	85 b9       	out	0x05, r24	; 5
  f0:	cd cf       	rjmp	.-102    	; 0x8c <main+0xc>

000000f2 <DeteccionLineaDER>:
#include <avr/io.h>
#include "Modulo_DeteccionLinea.h"

int DeteccionLineaDER(unsigned char LineaDER)
{
	if (PINC & LineaDER) return 1;
  f2:	96 b1       	in	r25, 0x06	; 6
  f4:	89 23       	and	r24, r25
  f6:	19 f0       	breq	.+6      	; 0xfe <DeteccionLineaDER+0xc>
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	08 95       	ret
	else return 0;
  fe:	80 e0       	ldi	r24, 0x00	; 0
 100:	90 e0       	ldi	r25, 0x00	; 0
}
 102:	08 95       	ret

00000104 <DeteccionLineaIZQ>:

/////////////////////////////////////////////////////////////////////////////////////////////////////////

int DeteccionLineaIZQ(unsigned char LineaIZQ)
{
	if (PINC & LineaIZQ) return 1;
 104:	96 b1       	in	r25, 0x06	; 6
 106:	89 23       	and	r24, r25
 108:	19 f0       	breq	.+6      	; 0x110 <DeteccionLineaIZQ+0xc>
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	08 95       	ret
	else return 0;
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	90 e0       	ldi	r25, 0x00	; 0
}
 114:	08 95       	ret

00000116 <_exit>:
 116:	f8 94       	cli

00000118 <__stop_program>:
 118:	ff cf       	rjmp	.-2      	; 0x118 <__stop_program>
